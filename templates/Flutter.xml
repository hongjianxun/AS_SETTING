<templateSet group="Flutter">
  <template name="showDialog" value="showDialog&lt;void&gt;(&#10;context: $context$,&#10;barrierDismissible: $dismiss$, // false = user must tap button, true = tap outside dialog&#10;builder: (BuildContext dialogContext){&#10;return AlertDialog(&#10;title: Text('$title$'),&#10;content: Text('$content$'),&#10;actions: &lt;Widget&gt;[&#10;FlatButton(&#10;child: Text('$buttonText$'),&#10;onPressed: () {&#10;Navigator.of(dialogContext).pop(); // Dismiss alert dialog&#10;},&#10;),&#10;],&#10;);&#10;},&#10;);" description="New AlertDialog" toReformat="true" toShortenFQNames="true">
    <variable name="context" expression="&quot;context&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="dismiss" expression="&quot;barrierDismissible&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="title" expression="&quot;title&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="content" expression="&quot;dialogBody&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="buttonText" expression="&quot;buttonText&quot;" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="txt" value="TextButton.icon(&#10; onPressed: () {&#10; print(&quot;TextButton.icon&quot;);&#10; },&#10; icon: Icon(Icons.local_florist),&#10; label: Text(&quot;TextButton.icon&quot;))," description="Create TextButton.icon Widget" toReformat="true" toShortenFQNames="true">
    <variable name="text" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="page" value="import 'package:flutter/material.dart';&#10;&#10;class $CLASS_NAME$ extends StatefulWidget {&#10;  @override&#10;  State&lt;StatefulWidget&gt; createState() {&#10;    return _$CLASS_NAME$State();&#10;  }&#10;}&#10;&#10;class _$CLASS_NAME$State extends State&lt;$CLASS_NAME$&gt; {&#10;&#10;  @override&#10;  Widget build(BuildContext context) {&#10;        return Scaffold(&#10;      appBar: AppBar(&#10;        title: Text(&quot;$CLASS_NAME$&quot;),&#10;      ),&#10;      body:Center(&#10;        child: Text(&quot;$CLASS_NAME$&quot;),&#10;      ),&#10;    );&#10;  }&#10;}" description="Create page without MaterialApp" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="stl" value="class $NAME$ extends StatefulWidget {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;" description="Create StatefulWidget Widget" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="stf" value="class $NAME$ extends StatelessWidget {&#10;  @override&#10;  _$NAME$State createState() =&gt; _$NAME$State();&#10;}&#10;&#10;class _$NAME$State extends State&lt;$NAME$&gt; {&#10;  @override&#10;  Widget build(BuildContext context) {&#10;    return Container($END$);&#10;  }&#10;}&#10;&#10;" description="Create StatelessWidget Widget" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="btn_falt" value="FlatButton(&#10;onPressed: () {&#10;  print(&quot;FlatButton&quot;);&#10; },&#10;  child: Text(&quot;FlatButton&quot;)),&#10;" description="Create FlatButton Widget" toReformat="true" toShortenFQNames="true">
    <variable name="text" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="btn_falt_icon" value="FlatButton.icon(&#10; onPressed: () {&#10; print(&quot;FlatButton.icon&quot;);&#10; },&#10; icon: Icon(Icons.add),&#10; label: Text(&quot;FlatButton icon&quot;)),&#10;" description="Create FlatButton.icon Widget" toReformat="true" toShortenFQNames="true">
    <variable name="text" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="build" value="@override &#10; Widget build(BuildContext context) { &#10; return $body$; &#10;}&#10;" description="No Such Method" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="$body$" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>